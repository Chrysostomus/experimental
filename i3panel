#! /bin/sh
#panel script for bspwm using i3 style workspace indicator
# codezen panel

# Absorb all of the rote variable setting to make our panel self-contained
 
# From example .profile changes
 
PANEL_FIFO="$HOME/.config/bspwm/panfifo"
PANEL_HEIGHT="16"
PANEL_FONT_FAMILY="-*-terminus-medium-r-normal-*-12-*-*-*-c-*-*-1"
 
# From panel_colors file
 
COLOR_FOREGROUND='#FFA3A6AB'
COLOR_BACKGROUND='#FF34322E'
COLOR_ACTIVE_MONITOR_FG='#FF34322E'
COLOR_ACTIVE_MONITOR_BG='#FF58C5F1'
COLOR_INACTIVE_MONITOR_FG='#FF58C5F1'
COLOR_INACTIVE_MONITOR_BG='#FF34322E'
COLOR_FOCUSED_OCCUPIED_FG='#FFF6F9FF'
COLOR_FOCUSED_OCCUPIED_BG='#FF5C5955'
COLOR_FOCUSED_FREE_FG='#FFF6F9FF'
COLOR_FOCUSED_FREE_BG='#FF6D561C'
COLOR_FOCUSED_URGENT_FG='#FF34322E'
COLOR_FOCUSED_URGENT_BG='#FFF9A299'
COLOR_OCCUPIED_FG='#FFA3A6AB'
COLOR_OCCUPIED_BG='#FF34322E'
COLOR_FREE_FG='#FF6F7277'
COLOR_FREE_BG='#FF34322E'
COLOR_URGENT_FG='#FFF9A299'
COLOR_URGENT_BG='#FF34322E'
COLOR_LAYOUT_FG='#FFA3A6AB'
COLOR_LAYOUT_BG='#FF34322E'
COLOR_TITLE_FG='#FFA3A6AB'
COLOR_TITLE_BG='#FF34322E'
COLOR_STATUS_FG='#FFA3A6AB'
COLOR_STATUS_BG='#FF34322E'
 
# Kill any panel processes older than us, instead of bailing like the example
# does. That caused one too many panel-less boots for me.
 
while [ $(pgrep -cx panel) -gt 1 ] ; do
	pkill -ox -9 panel
done
 
# Kill any remaining trays / xtitle instances so we don't have multiples.
 
killall -9 stalonetray
killall -9 xtitle
 
# Setup taken from example, tell bspwm to avoid our status/tray and to start
# sending status updates to a FIFO
 
trap 'trap - TERM; kill 0' INT TERM QUIT EXIT
 
[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"
 
bspc config top_padding $PANEL_HEIGHT
bspc control --subscribe > "$PANEL_FIFO" &
# Title
xtitle -sf 'T%s' > "$PANEL_FIFO" &
 
# Now panel_bar, which was mostly taken from the example panel_bar, with a
# handful of improvements.
 
# - functionified, from panel_bar file of example
# - the output changes based on the number of monitors, to place a single
# monitors's information on that same monitor, instead of all in one corner.
# - added B header for battery
# - all the desktop indicators are enumerated
 
num_mon=$(bspc query -M | wc -l)
 
wm_info_array=("" "" "" "" "")

# rootcomas panel_bar
. ./panel_colors
function panel_bar {
 while read -r line ; do
    case $line in
        X*)
            info="${line#?}"
            if [ -n "$info" ]; then
                info="%{Iicons/xbm/info_03.xbm} ${info} "
            fi
            ;;
        M*)
            music="${line#?}"
            if [ -n "$music" ]; then
                music=" %{A:scripts/mpd-clipboard.sh $PANEL_FIFO:} %{Iicons/xbm/phones.xbm}%{A} %{A:mpc -q toggle:}${music}%{A}%{A:mpc -q prev:} %{Iicons/xbm/prev.xbm} %{A}%{A:mpc -q next:} %{Iicons/xbm/next.xbm} %{A} "
            fi
            ;;
        S*)
            time="${line#?}" #http://wiki.bash-hackers.org/syntax/pe#substring_removal
            ;;
        T*)
            title="${line#?}"
            ;;
        W*)
            # bspwm internal state
            desktops=""
            IFS=':'
            set -- ${line#?}
            while [ $# -gt 0 ] ; do
                item=$1
                name=${item#?}
                case $item in
                    # always show focused desktops
                    O*|F*|U*)
                        desktops="${desktops}%{F$COLOR_FOCUSED_DESKTOP_FG}%{B$COLOR_FOCUSED_DESKTOP_BG} ${name} %{B-}%{F-}"
                        ;;
                    # show used unfocused (hide free unused)
                    o*|u*)#f*
                        desktops="${desktops}%{F$COLOR_DESKTOP_FG}%{B$COLOR_DESKTOP_BG}%{A:bspc desktop -f ${name}:} ${name} %{A}%{B-}%{F-}"
                        ;;
                esac
                shift
            done
            ;;
    esac
    printf "%s\n" "%{l}%{A4:bspc desktop -f next.occupied:}%{A5:bspc desktop -f prev.occupied:}${desktops}%{A}%{A}%{c}${title}%{r}${info}${music}%{Iicons/xbm/clock.xbm} ${time} "
 done
}

# Actually invoking the panel and piping to bar
 
panel_bar | bar -g x$PANEL_HEIGHT -f "$PANEL_FONT_FAMILY" -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" &
 
 # rootcomas panel pipe 
cat $PANEL_FIFO | ./panel_bar | bar -g x16 -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" -f "$PANEL_FONT_FAMILY" | while read -r line; do $line; done


wait
